# Setup FastAPI production app. Secrets are read from GCP SM through ESO SecretStore and other configs come from a ConfigMap
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-api-prod
  labels:
    app: backend-api-prod
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-api-prod
  template:
    metadata:
      labels:
        app: backend-api-prod
    spec:
      containers:
      - name: backend-api-prod
        image: eu.gcr.io/quiz-craft-398712/quiz-craft-api
        ports:
        - containerPort: 3000
        env:
        - name: MONGO_URI
          valueFrom:
            secretKeyRef:
              name: mongodb-admin-admin
              key: connectionString.standardSrv
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: fastapi-secrets
              key: jwt_secret_key
        - name: MAIL_SERVER_USER
          valueFrom:
            secretKeyRef:
              name: fastapi-secrets
              key: mail_server_user
        - name: MAIL_SERVER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fastapi-secrets
              key: mail_server_password
        volumeMounts:
        - name: decouple-config
          mountPath: "/config/fastapi"
          readOnly: true
      volumes:
      - name: decouple-config
        configMap:
          name: fastapi-configmap-prod
          items:
          - key: "decouple.config"
            path: ".env"

---
# Setup FastAPI development app.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-api-dev
  labels:
    app: backend-api-dev
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-api-dev
  template:
    metadata:
      labels:
        app: backend-api-dev
    spec:
      containers:
      - name: backend-api-dev
        image: eu.gcr.io/quiz-craft-398712/quiz-craft-api
        ports:
        - containerPort: 3000
        env:
        - name: MONGO_URI
          valueFrom:
            secretKeyRef:
              name: mongodb-admin-admin
              key: connectionString.standardSrv
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: fastapi-secrets
              key: jwt_secret_key
        volumeMounts:
        - name: decouple-config
          mountPath: "/config/fastapi"
          readOnly: true
      volumes:
      - name: decouple-config
        configMap:
          name: fastapi-configmap-dev
          items:
          - key: "decouple.config"
            path: ".env"

---
# Setup FastAPI test app.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-api-test
  labels:
    app: backend-api-test
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-api-test
  template:
    metadata:
      labels:
        app: backend-api-test
    spec:
      containers:
      - name: backend-api-test
        image: eu.gcr.io/quiz-craft-398712/quiz-craft-api
        ports:
        - containerPort: 3000
        env:
        - name: MONGO_URI
          valueFrom:
            secretKeyRef:
              name: mongodb-admin-admin
              key: connectionString.standardSrv
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: fastapi-secrets
              key: jwt_secret_key
        volumeMounts:
        - name: decouple-config
          mountPath: "/config/fastapi"
          readOnly: true
      volumes:
      - name: decouple-config
        configMap:
          name: fastapi-configmap-test
          items:
          - key: "decouple.config"
            path: ".env"

---
# Setup FastAPI React app.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-react-prod
  labels:
    app: frontend-react-prod
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-react-prod
  template:
    metadata:
      labels:
        app: frontend-react-prod
    spec:
      containers:
      - name: frontend-react-prod
        image: eu.gcr.io/quiz-craft-398712/quiz-craft-react
        ports:
        - containerPort: 80
       
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: default
  name: traefik
  labels:
    app: traefik

spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: traefik:v2.10
          args:
            - --api.insecure
            - --accesslog
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --entrypoints.web.http.redirections.entryPoint.to=websecure
            - --entrypoints.web.http.redirections.entryPoint.scheme=https
            - --entrypoints.web.http.redirections.entrypoint.permanent=true
            - --providers.kubernetescrd
            - --certificatesresolvers.myresolver.acme.tlschallenge=true
            - --certificatesresolvers.myresolver.acme.email=admin@quiz-craft.com
            - --certificatesresolvers.myresolver.acme.storage=acme.json
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: admin
              containerPort: 8080
